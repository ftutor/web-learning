#+Title: HTML基础

#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:nil reveal_control:t
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_width:1200 reveal_height:800
#+OPTIONS: toc:1
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: cube
#+REVEAL_THEME: moon
#+REVEAL_HLEVEL: 1
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="H5基础">
#+REVEAL_POSTAMBLE: <p> Created by wuwei. </p>
#+REVEAL_PLUGINS: (markdown notes)

* 环境搭建
*** 最简单的网页: v0.1.0
  - 安装静态 http server
#+BEGIN_SRC sh
  npm install -g http-server
#+END_SRC

  - HTML表示显示格式

* 文档结构
** <!DOCTYPE html>
文档类型（doctypes）,历史遗留，不用关心
** <html>
包含整个页面的内容，也被称作根元素。
** <head>
包含你想添加的所有内容，但是不会被用户所看到。这里面包括像想被搜索引擎搜索到的关键字（keywords）和页面描述，CSS样式表和字符编码声明等等。
** <body>
被用户看到的内容，不管是文本，图像，视频，游戏，可播放的音轨或是其他内容。
** <meta> : v0.1.1
表示网页全局的属性信息
  -  <meta charset="utf-8">  
      指定了文档需要使用的字符编码，像 UTF-8 ，它包括了非常多人类已知语言的字符。基本上 UTF-8 可以处理任何文本内容。我们没有任何理由不去设定字符编码，而且也可以避免以后可能出现的问题。
  -  <meta http-equiv="refresh" >
      网页刷新
** <title>: v0.1.2
设置了页面的标题，标题显示在浏览器标签页上，而且在你将网页添加到收藏夹或喜爱中时将作为默认名称。

* 标签语法
**  [[file:html/grumpy-cat-small.png][基本标签]]

[[./html/grumpy-cat-small.png]]

**  内嵌元素
#+BEGIN_SRC html
<p>Hello<strong>!!!</strong> Hello.</p>
#+END_SRC
** 元素分类
*** 块（Block） : v0.1.3  
  - 单独成行
  - 不能嵌套在"内联"，可以嵌套在"块"
  - <p>,<list>,<menu>,<footer> ,...
*** 内联(inline) 
  - 嵌套在"块"中，不成行
  - <em>,<strong>,<a>
** 空元素(Empty elements) : v0.1.4
#+BEGIN_SRC html
   <img src="./timg.jpg" />
#+END_SRC

**  [[file:html/grumpy-cat-attribute-small.png][标签带属性]]
[[./html/grumpy-cat-attribute-small.png]]

*** <a>链接 : v0.1.5 

* HTML 控件
** 文字
*** 文字的属性 : v0.1.5
   文字的大小，颜色，位置，字体...
** 排版
   - 标题
   - list 
   - table
*** 标题 : v0.1.6
  - h1/h2/h3...
*** list : v0.1.7 
  - unorder
  - order
** 图片
*** 显示图片: v0.1.8
  - 本地
  - 网络
  - alt
  - 尺寸
* 超链接(hyperlink)
** 超链接
  - HTML -- HyperText Markup Language
  - 从一个文档(位置)链接到另一个文档(位置)
** URL(Uniform Resource Locator)
*** URL?
  A text string specifying where a resource can be found on the Internet.
** 基本结构
*** 例子
#+BEGIN_SRC sh
  https://developer.mozilla.org
  https://developer.mozilla.org/en-US/docs/Learn/
  https://developer.mozilla.org/en-US/search?q=URL
#+END_SRC

*** 结构
#+BEGIN_SRC sh
  http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument
#+END_SRC

  - http://                  --- 协议
  - www.example.com          --- 域名
  - :80                      --- 端口
  - /path/to/myfile.html     --- 文件路径
  - ?key1=value1&key2=value2 --- 参数
  - #SomewhereInTheDocument  --- 锚点（文档中的位置）
*** Protocol
  - http/https
  - ftp
  - mailto
  - file
*** 绝对路径
  - 全路径

    https://developer.mozilla.org/en-US/docs/Learn    

  - 省略协议

    //developer.mozilla.org/en-US/docs/Learn

  - 省略域名

    /en-US/docs/Learn

*** 相对路径

  - Sub resources

#+BEGIN_SRC sh
    Skills/Infrastructure/Understanding_URLs   
#+END_SRC
  
  - 返回上级目录树

#+BEGIN_SRC sh
    ../CSS/display   
#+END_SRC

*** 相对路径练习

#+BEGIN_SRC sh
   shell输入:  http-server ~/web-learning
#+END_SRC

#+BEGIN_SRC sh
    浏览里输入： http://localhost:8080
#+END_SRC

#+BEGIN_SRC sh
    浏览里输入： http://localhost:8080/.git
#+END_SRC

#+BEGIN_SRC sh
    浏览里输入： http://localhost:8080/.git/../index.html
#+END_SRC

** HTML使用超链接
 - <a>
 - <link>,<script>
 - <img>,<video,<audio>
 - <iframe>

** 分拆index.html: v0.1.9

* 练习：
   修改文本属性的所有背景色
